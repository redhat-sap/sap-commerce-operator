apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: hybrisapps.hybris.hybris.org
spec:
  group: hybris.hybris.org
  names:
    kind: HybrisApp
    listKind: HybrisAppList
    plural: hybrisapps
    singular: hybrisapp
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: HybrisApp is the Schema for the hybrisapps API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HybrisAppSpec defines the desired state of HybrisApp
          properties:
            apachejvmRouteName:
              description: Hybris app Apache server.xml jvmRoute name
              type: string
            baseImageName:
              description: Hybris base image name
              type: string
            baseImageTag:
              description: Hybris base image tag
              type: string
            hybrisANTTaskNames:
              description: Hybris app ANT tasks
              type: string
            sourceRepoContext:
              description: Hybris app repository source location
              type: string
            sourceRepoLocalPropertiesOverride:
              description: Hybris app repository local.properties override location
              type: string
            sourceRepoRef:
              description: Hybris app source repository reference
              type: string
            sourceRepoURL:
              description: Hybris app source repository URL
              type: string
          type: object
        status:
          description: HybrisAppStatus defines the observed state of HybrisApp
          properties:
            buildConditions:
              items:
                properties:
                  buildName:
                    description: Name of the build for the Hybris base image
                    type: string
                  conditions:
                    items:
                      description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                      properties:
                        lastTransitionTime:
                          format: date-time
                          type: string
                        message:
                          type: string
                        reason:
                          description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                          type: string
                        status:
                          type: string
                        type:
                          description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                required:
                - buildName
                - conditions
                type: object
              type: array
            deploymentConfigConditions:
              properties:
                conditions:
                  description: Conditions of the deploymentConfig for the Hybris app
                  items:
                    description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                        type: string
                      status:
                        type: string
                      type:
                        description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                        type: string
                    required:
                    - status
                    - type
                    type: object
                  type: array
              required:
              - conditions
              type: object
            routeConditions:
              items:
                properties:
                  conditions:
                    description: Conditions of the route for the Hybris app
                    items:
                      description: "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API."
                      properties:
                        lastTransitionTime:
                          format: date-time
                          type: string
                        message:
                          type: string
                        reason:
                          description: ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.
                          type: string
                        status:
                          type: string
                        type:
                          description: "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\"."
                          type: string
                      required:
                      - status
                      - type
                      type: object
                    type: array
                  host:
                    description: Host of the route for the Hybris app
                    type: string
                  routeName:
                    description: Name of the route for the Hybris app
                    type: string
                required:
                - conditions
                - host
                - routeName
                type: object
              type: array
          required:
          - buildConditions
          - deploymentConfigConditions
          - routeConditions
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
